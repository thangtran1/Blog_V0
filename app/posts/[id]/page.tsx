import Link from "next/link"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Button } from "@/components/ui/button"
import { Calendar, Clock, ArrowLeft, Share2 } from "lucide-react"

const posts = {
  1: {
    id: 1,
    title: "Elasticsearch To√†n T·∫≠p: Search Engine Hi·ªán ƒê·∫°i Cho ·ª®ng D·ª•ng Web",
    content: `
      <p>Trong th·∫ø gi·ªõi s·ªë h√≥a hi·ªán ƒë·∫°i, vi·ªác t√¨m ki·∫øm th√¥ng tin nhanh ch√≥ng v√† ch√≠nh x√°c ƒë√£ tr·ªü th√†nh m·ªôt y√™u c·∫ßu thi·∫øt y·∫øu. T·ª´ nh·ªØng trang web th∆∞∆°ng m·∫°i ƒëi·ªán t·ª≠ v·ªõi h√†ng tri·ªáu s·∫£n ph·∫©m, ƒë·∫øn c√°c ·ª©ng d·ª•ng ph√¢n t√≠ch log ph·ª©c t·∫°p, kh·∫£ nƒÉng t√¨m ki·∫øm hi·ªáu qu·∫£ quy·∫øt ƒë·ªãnh ƒë·∫øn tr·∫£i nghi·ªám ng∆∞·ªùi d√πng v√† th√†nh c√¥ng c·ªßa h·ªá th·ªëng.</p>
      
      <p><strong>Elasticsearch</strong> - m·ªôt trong nh·ªØng search engine m·∫°nh m·∫Ω nh·∫•t hi·ªán nay, ƒë√£ tr·ªü th√†nh l·ª±a ch·ªçn h√†ng ƒë·∫ßu cho c√°c doanh nghi·ªáp v√† l·∫≠p tr√¨nh vi√™n tr√™n to√†n th·∫ø gi·ªõi.</p>
      
      <p>B√†i vi·∫øt n√†y s·∫Ω ƒë∆∞a b·∫°n v√†o h√†nh tr√¨nh kh√°m ph√° to√†n di·ªán v·ªÅ Elasticsearch, t·ª´ nh·ªØng kh√°i ni·ªám c∆° b·∫£n v·ªÅ search engine, ki·∫øn tr√∫c ph√¢n t√°n, so s√°nh v·ªõi c√°c c√¥ng ngh·ªá kh√°c, cho ƒë·∫øn h∆∞·ªõng d·∫´n tri·ªÉn khai th·ª±c t·∫ø trong c√°c d·ª± √°n hi·ªán ƒë·∫°i.</p>
      
      <h2>1. Search Engine l√† g√¨? T·∫°i sao c·∫ßn Search Engine trong ·ª©ng d·ª•ng hi·ªán ƒë·∫°i?</h2>
      
      <h3>1.1. Search Engine (C√¥ng c·ª• t√¨m ki·∫øm) l√† g√¨?</h3>
      
      <p>Search Engine c√≥ th·ªÉ ƒë∆∞·ª£c hi·ªÉu nh∆∞ m·ªôt <strong>h·ªá th·ªëng chuy√™n d·ª•ng</strong> ƒë∆∞·ª£c thi·∫øt k·∫ø ƒë·ªÉ t√¨m ki·∫øm, l·ªçc v√† tr·∫£ v·ªÅ th√¥ng tin t·ª´ m·ªôt t·∫≠p d·ªØ li·ªáu l·ªõn m·ªôt c√°ch nhanh ch√≥ng v√† ch√≠nh x√°c. Kh√°c v·ªõi c√°ch t√¨m ki·∫øm truy·ªÅn th·ªëng b·∫±ng c√°ch duy·ªát tu·∫ßn t·ª± qua d·ªØ li·ªáu (nh∆∞ s·ª≠ d·ª•ng <code>LIKE %keyword%</code> trong SQL), search engine s·ª≠ d·ª•ng c√°c k·ªπ thu·∫≠t indexing v√† scoring ti√™n ti·∫øn ƒë·ªÉ t·ªëi ∆∞u h√≥a qu√° tr√¨nh t√¨m ki·∫øm.</p>
      
      <h3>1.2. T·∫°i sao ·ª©ng d·ª•ng ƒë·∫°i c·∫ßn Search Engine chuy√™n d·ª•ng?</h3>
      
      <p>Trong c√°c ·ª©ng d·ª•ng hi·ªán ƒë·∫°i, vi·ªác t√¨m ki·∫øm kh√¥ng ch·ªâ ƒë∆°n gi·∫£n l√† so kh·ªõp t·ª´ kh√≥a. Ng∆∞·ªùi d√πng mong ƒë·ª£i:</p>
      
      <ul>
        <li><strong>T√¨m ki·∫øm th√¥ng minh</strong>: Hi·ªÉu ƒë∆∞·ª£c √Ω ƒë·ªãnh t√¨m ki·∫øm ngay c·∫£ khi c√≥ l·ªói ch√≠nh t·∫£</li>
        <li><strong>K·∫øt qu·∫£ li√™n quan</strong>: S·∫Øp x·∫øp k·∫øt qu·∫£ theo ƒë·ªô ph√π h·ª£p</li>
        <li><strong>T·ªëc ƒë·ªô cao</strong>: Tr·∫£ v·ªÅ k·∫øt qu·∫£ trong v√†i millisecond</li>
        <li><strong>T√¨m ki·∫øm ƒëa d·∫°ng</strong>: Text, s·ªë, ng√†y th√°ng, ƒë·ªãa l√Ω...</li>
      </ul>
      
      <h3>1.3. Nh∆∞·ª£c ƒëi·ªÉm v√† th√°ch th·ª©c</h3>
      
      <p>Tuy nhi√™n, vi·ªác x√¢y d·ª±ng v√† v·∫≠n h√†nh Search Engine c≈©ng ƒëi k√®m v·ªõi nh·ªØng th√°ch th·ª©c:</p>
      
      <ul>
        <li><strong>ƒê·ªô ph·ª©c t·∫°p cao</strong>: C·∫ßn hi·ªÉu s√¢u v·ªÅ indexing, scoring, clustering</li>
        <li><strong>T√†i nguy√™n h·ªá th·ªëng</strong>: Ti√™u t·ªën RAM v√† CPU ƒë√°ng k·ªÉ</li>
        <li><strong>ƒê·ªìng b·ªô d·ªØ li·ªáu</strong>: C·∫ßn c∆° ch·∫ø sync gi·ªØa database ch√≠nh v√† search index</li>
        <li><strong>Monitoring v√† troubleshooting</strong>: C·∫ßn tools chuy√™n d·ª•ng ƒë·ªÉ theo d√µi</li>
      </ul>
    `,
    date: "23 th√°ng 6, 2025",
    readTime: "24 ph√∫t ƒë·ªçc",
    category: "Backend",
  },
}

const recentPosts = [
  { id: 2, title: "API Gateway v·ªõi Kong - Gi·∫£i ph√°p to√†n di·ªán cho Microservices", date: "21 th√°ng 6, 2025" },
  { id: 3, title: "Micro Frontend Architecture - H∆∞·ªõng d·∫´n to√†n di·ªán", date: "19 th√°ng 6, 2025" },
  { id: 4, title: "SQL vs NoSQL - So S√°nh Chi Ti·∫øt C√°c Lo·∫°i Database Hi·ªán ƒê·∫°i", date: "17 th√°ng 6, 2025" },
  { id: 5, title: "NocoBase - N·ªÅn T·∫£ng Low-Code Cho Doanh Nghi·ªáp Hi·ªán ƒê·∫°i", date: "15 th√°ng 6, 2025" },
]

const tableOfContents = [
  { id: "1", title: "Search Engine l√† g√¨? T·∫°i sao c·∫ßn Search Engine trong ·ª©ng d·ª•ng hi·ªán ƒë·∫°i?" },
  { id: "1.1", title: "Search Engine (C√¥ng c·ª• t√¨m ki·∫øm) l√† g√¨?" },
  { id: "1.2", title: "T·∫°i sao ·ª©ng d·ª•ng ƒë·∫°i c·∫ßn Search Engine chuy√™n d·ª•ng?" },
  { id: "1.3", title: "Nh∆∞·ª£c ƒëi·ªÉm v√† th√°ch th·ª©c" },
  { id: "2", title: "Elasticsearch l√† g√¨? V√¨ sao l·∫°i m·∫°nh m·∫Ω ƒë·∫øn v·∫≠y?" },
  { id: "2.1", title: "ƒê·∫∑c ƒëi·ªÉm n·ªïi b·∫≠t c·ªßa Elasticsearch" },
  { id: "2.2", title: "L·ªãch s·ª≠ ph√°t tri·ªÉn c·ªßa Elasticsearch" },
  { id: "2.3", title: "Elasticsearch trong h·ªá sinh th√°i Elastic Stack" },
  { id: "3", title: "Ki·∫øn tr√∫c c·ªët l√µi c·ªßa Elasticsearch" },
]

export default function PostDetailPage({ params }: { params: { id: string } }) {
  const post = posts[Number.parseInt(params.id) as keyof typeof posts]

  if (!post) {
    return <div>B√†i vi·∫øt kh√¥ng t·ªìn t·∫°i</div>
  }

  return (
    <div className="container py-8">
      <div className="max-w-7xl mx-auto">
        <div className="mb-8">
          <Button variant="ghost" asChild>
            <Link href="/posts">
              <ArrowLeft className="w-4 h-4 mr-2" />
              Quay l·∫°i t·∫•t c·∫£ b√†i vi·∫øt
            </Link>
          </Button>
        </div>

        <div className="grid lg:grid-cols-12 gap-8">
          {/* Sidebar Left */}
          <div className="lg:col-span-3">
            <div className="sticky top-20 space-y-6">
              <Card className="border-green-200 dark:border-green-800 bg-card/50 backdrop-blur-sm">
                <CardHeader>
                  <CardTitle className="text-lg flex items-center gap-2">üìö B√†i vi·∫øt g·∫ßn ƒë√¢y</CardTitle>
                </CardHeader>
                <CardContent className="space-y-4">
                  {recentPosts.map((recentPost) => (
                    <Link key={recentPost.id} href={`/posts/${recentPost.id}`} className="block group">
                      <div className="p-3 rounded-lg hover:bg-muted/50 transition-colors border border-transparent hover:border-green-200 dark:hover:border-green-800">
                        <h4 className="font-medium text-sm line-clamp-2 group-hover:text-green-600 dark:group-hover:text-green-400 transition-colors mb-1">
                          {recentPost.title}
                        </h4>
                        <p className="text-xs text-muted-foreground">{recentPost.date}</p>
                      </div>
                    </Link>
                  ))}
                </CardContent>
              </Card>
            </div>
          </div>

          {/* Main Content */}
          <div className="lg:col-span-6">
            <article className="prose prose-gray max-w-none dark:prose-invert prose-lg">
              <div className="mb-8">
                <div className="flex items-center gap-2 mb-4">
                  <Badge className="bg-green-500 hover:bg-green-600 text-white">{post.category}</Badge>
                </div>
                <h1 className="text-3xl md:text-4xl font-bold mb-4 text-foreground leading-tight">{post.title}</h1>
                <div className="flex items-center gap-6 text-muted-foreground mb-6 pb-6 border-b border-border">
                  <div className="flex items-center gap-2">
                    <Calendar className="w-4 h-4" />
                    {post.date}
                  </div>
                  <div className="flex items-center gap-2">
                    <Clock className="w-4 h-4" />
                    {post.readTime}
                  </div>
                  <Button variant="ghost" size="sm" className="hover:text-green-600">
                    <Share2 className="w-4 h-4 mr-2" />
                    Chia s·∫ª
                  </Button>
                </div>
              </div>

              <div
                className="prose-lg prose-headings:text-foreground prose-p:text-foreground prose-strong:text-green-600 dark:prose-strong:text-green-400 prose-code:bg-muted prose-code:text-foreground prose-code:px-2 prose-code:py-1 prose-code:rounded prose-ul:text-foreground prose-li:text-foreground"
                dangerouslySetInnerHTML={{ __html: post.content }}
              />
            </article>
          </div>

          {/* Table of Contents */}
          <div className="lg:col-span-3">
            <div className="sticky top-20">
              <Card className="border-green-200 dark:border-green-800 bg-card/50 backdrop-blur-sm">
                <CardHeader>
                  <CardTitle className="text-lg text-green-600 dark:text-green-400 flex items-center gap-2">
                    üìã Trong b√†i n√†y
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <nav className="space-y-2">
                    {tableOfContents.map((item) => (
                      <Link
                        key={item.id}
                        href={`#${item.id}`}
                        className="block text-sm text-muted-foreground hover:text-green-600 dark:hover:text-green-400 transition-colors py-2 px-3 rounded-md hover:bg-muted/50 border-l-2 border-transparent hover:border-green-500"
                      >
                        {item.title}
                      </Link>
                    ))}
                  </nav>
                </CardContent>
              </Card>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
}
